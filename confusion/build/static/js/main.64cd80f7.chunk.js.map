{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","preventDefault","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","remember","color","Component","Footer","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","image","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","message","resetFeedbackForm","role","model","Row","md","Col","text","validators","placeholder","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","Media","tag","left","middle","object","heading","body","About","CardHeader","title","list","leaders","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64cd80f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, \n    Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n          };\n\n          this.toggleNav = this.toggleNav.bind(this);\n          this.toggleModal = this.toggleModal.bind(this);\n          this.handleLogin = this.handleLogin.bind(this);\n        }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lip-smacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"test\" id=\"username\" name=\"username\" \n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" \n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>        \n    );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading ...</p>\n        </div>\n    );\n}","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else \n        return(\n            <FadeTransform in transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    \n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess} />\n\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                    isLoading={props.leaderLoading}\n                    errMess={props.leaderErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish }) {\n\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else \n        return (\n                <div className = \"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n        );\n    \n}\n\nexport default Menu;","import React, { Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Row, Col} from 'reactstrap';\nimport { Link } from 'react-router-dom'; \nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleSubmit(values) {\n        console.log('Current State is: ', JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n    \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\"\n                                        id=\"firstname\" \n                                        name=\"firstname\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        placeholder=\"First Name\" />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                         />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\"\n                                        id=\"lastname\" \n                                        name=\"lastname\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        placeholder=\"Last Name\" />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                         />\n\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\"\n                                        id=\"telnum\" \n                                        name=\"telnum\"\n                                        placeholder=\"+1 (123) 456-7890\"\n                                        className=\"form-control\" \n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                        />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 digits',\n                                            maxLength: 'Must be 15 digits or less',\n                                            isNumber: 'Should be a number'\n                                        }}\n                                         />\n                                        \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\"\n                                        id=\"email\" \n                                        name=\"email\"\n                                        placeholder=\"address@email.com\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Not a valid email address'\n                                        }}\n                                         />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                            name=\"agree\"\n                                            className=\"form-check-input\" />\n                                             <strong>may we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Row>\n                                        <Control.select model=\".contactType\"   \n                                            name=\"contactType\"\n                                            className=\"form-control\"\n                                            >\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                        </Control.select>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" \n                                        id=\"message\" \n                                        name=\"message\"\n                                        className=\"form-control\"\n                                        rows=\"12\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\"\n                                    color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leader}) {\n\n    return(\n    <div key={leader.id} className=\"col-12 mt-5\">\n        <Media tag=\"li\">\n            <div className=\"col-2\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>\n            </div>\n            <div className=\"col-10\">\n                <Media heading>{leader.name}</Media>\n                <Media body>\n                    <p>{leader.designation}</p>\n                </Media>\n                <Media body >\n                    <p>{leader.description}</p>\n                </Media>\n            </div>\n        </Media>\n    </div>\n    );\n}\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>                                            \n                        <Stagger in>\n                            {props.leaders.leaders.map((leader) => {\n                            return (\n                                <Fade in>\n                                    <RenderLeader leader={leader} />\n                                </Fade>                                \n                            );\n                            })}\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem, Button,\n    Label, Modal, ModalHeader, ModalBody, Row, Col } from 'reactstrap';\n\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\n\nfunction RenderDish({dish}) {\n    if (dish != null)\n        return(\n            <div  className=\"col-12 col-md-5 m-1\">\n                <FadeTransform in transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card>\n                        <CardImg width=\"100%\" top src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    else\n        return(\n            <div></div>\n        );\n}\n\nfunction RenderComments({comments, postComment, dishId}) {\n\n    if (comments != null) {\n\n        return (\n            <div  className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul className = \"list-unstyled\">\n                    <Stagger in>\n                        {comments.map((comment) => {\n                            return (\n                                <Fade in>\n                                    <li key={comment.id} className=\"\">\n                                        <p>{comment.comment}</p>\n                                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\n                                    </li>\n                                </Fade>\n                            );\n                        })}\n                    </Stagger>\n                </ul>\n                <CommentForm dishId={dishId} postComment={postComment}  />\n            </div>\n\n        )\n\n    }\n    else \n        return(\n            <div></div>\n        )\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n          };\n\n          this.toggleModal = this.toggleModal.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return ( \n            <React.Fragment>\n                <div className=\"m-1\">\n                    <Button outline  onClick={this.toggleModal}>\n                        <span className=\"fa fa-pencil fa-lg\">Submit Comment</span>\n                    </Button>\n                </div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"email\" md={2}>Rating</Label>\n                            <Col md={10}>\n                                <Control.select model=\".rating\"   \n                                                name=\"rating\"\n                                                className=\"form-control\"\n                                                >\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Control.select>\n                            </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".author\"\n                                        id=\"author\" \n                                        name=\"author\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        placeholder=\"Last Name\" />\n                                    <Errors \n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters'\n                                        }}\n                                         />\n\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Comment</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".comment\" \n                                        id=\"comment\" \n                                        name=\"comment\"\n                                        className=\"form-control\"\n                                        rows=\"12\" />\n                                </Col>\n\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n            </React.Fragment>\n            )\n      }\n\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id} />\n                </div>           \n            </div>\n        );\n    }\n    else\n        return(\n            <div></div>\n        );\n\n}\n\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(\n            response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n/* ----------------------------------- */\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + 'comments')\n    .then(\n        response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n    \n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n        const newComment = {\n            dishId: dishId,\n            rating: rating,\n            author: author,\n            comment: comment\n        }\n        newComment.date = new Date().toISOString();\n\n        return fetch(baseUrl + 'comments', {\n            method: 'POST',\n            body: JSON.stringify(newComment),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'same-origin'\n        })\n        .then(\n            response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            }\n\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { \n            console.log('Post comments ', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n    \n}\n/* ----------------------------------- */\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n    .then(\n        response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then(promotions => dispatch(addPromos(promotions)))\n    .catch(error => dispatch(promosFailed(error.message)));\n\n\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n/* ----------------------------------- */\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n    .then(\n        response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n\n\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\n/* ----------------------------------- */\n\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        message: message\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(\n        response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n\n    )\n    .then(response => response.json())\n    .then(response => {\n        alert('Feedback added: ' + response);\n    })\n    .catch(error => { \n        console.log('Post feedback ', error.message);\n        alert('Your feedback could not be posted\\nError: ' + error.message);\n    });\n\n}\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const feedbackFailed = (errmess) => ({\n    type: ActionTypes.FEEDBACK_FAILED,\n    payload: errmess\n});\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';\n","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (firstname, lastname, telnum, email, agree, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, message)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))}\n});\n\nclass Main extends Component {\n  \n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n\n    const HomePage = () => {\n      return(\n        <Home \n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promosLoading={this.props.promotions.isLoading}\n          promosErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n          leaderLoading={this.props.leaders.isLoading}\n          leaderErrMess={this.props.leaders.errMess}\n          />\n      );\n    }\n    \n    const AboutPage = () => {\n      return(\n        <About \n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          leaders={this.props.leaders}\n          postFeedback={this.props.postFeedback}\n          />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]} \n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n            commentsErrMess={this.props.comments.errMess}\n            postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return ( \n      <div>\n        <Header />\n          <TransitionGroup>\n              <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                <Switch>\n                  <Route path=\"/home\" component={HomePage} />\n                  <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                  <Route path=\"/menu/:dishId\" component={DishWithId} />\n                  <Route exact path=\"/contactus\" component={() => <Contact \n                                                                    resetFeedbackForm={this.props.resetFeedbackForm} \n                                                                    postFeedback={this.props.postFeedback}\n                                                                    />\n                                                            } />\n                  <Route exact path=\"/aboutus\" component={AboutPage} />\n                  <Redirect to=\"/home\" />\n                </Switch>\n              </CSSTransition>\n          </TransitionGroup>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n            \n        default: \n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n    \n        case ActionTypes.ADD_COMMENT: \n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default: \n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n            \n        default: \n            return state;\n    }\n};\n","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n            \n        default: \n            return state;\n    }\n};\n","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return ( \n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main  />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-thunk';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}